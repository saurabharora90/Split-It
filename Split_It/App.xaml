<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:app="clr-namespace:Split_It_.Converter"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone" xmlns:Primitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    x:Class="Split_It_.App"
    >

    <!--Application Resources-->
    <Application.Resources>
        <local:LocalizedStrings xmlns:local="clr-namespace:Split_It_" x:Key="LocalizedStrings"/>

        <app:PaymentImageFileConverter x:Key="PaymentImageConverter"/>
        <app:ExpenseShareToAmountConverter x:Key="ExpenseShareAmountConverter"/>
        <app:ExpenseShareToColorConverter x:Key="ExpenseShareColorConverter"/>
        <app:BoolToVisibilityConverter x:Key="BoolVisibilityConverter"/>
        <app:ExpenseToTitleConverter x:Key="ExpenseTitleConverter" />
        <app:ExpenseShareToWhoPaidConverter x:Key="ExpenseShareWhoPaidConverter"/>
        <app:ExpenseShareToDescriptionConverter x:Key="ExpenseShareDescriptionConverter"/>

        <!--App templates-->
        <DataTemplate x:Key="expensesTemplate">
        	<Border BorderThickness="0,0,0,2" BorderBrush="{StaticResource splitwiseGreyBG}">
        		<Grid Margin="5,20,5,20" toolkit:TiltEffect.IsTiltEnabled="True">
        			<Grid.ColumnDefinitions>
        				<ColumnDefinition Width="Auto"/>
        				<ColumnDefinition Width="*"/>
        				<ColumnDefinition Width="Auto"/>
        			</Grid.ColumnDefinitions>
        			<Image Grid.Column="0" Source="{Binding payment, Converter={StaticResource PaymentImageConverter}}" VerticalAlignment="Center" Width="45" Height="65" Margin="0,0,8,0"/>

        			<Grid Grid.Column="1">
        				<Grid.RowDefinitions>
        					<RowDefinition Height="*"/>
        					<RowDefinition Height="Auto"/>
        				</Grid.RowDefinitions>

        				<TextBlock x:Name="tbTitle" TextTrimming="WordEllipsis" Text="{Binding Converter={StaticResource ExpenseTitleConverter}}" Foreground="Black" Grid.Row="0" FontSize="{StaticResource expenseTitleSize}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        				<TextBlock x:Name="tbWhoPaid" Foreground="{StaticResource settled}" Text="{Binding Converter={StaticResource ExpenseShareWhoPaidConverter}}" Grid.Row="1" FontSize="{StaticResource descriptionSize}" Visibility="{Binding payment, Converter={StaticResource BoolVisibilityConverter}}"/>

        			</Grid>

        			<Grid Grid.Column="2">
        				<Grid.RowDefinitions>
        					<RowDefinition Height="*"/>
        					<RowDefinition Height="Auto"/>
        				</Grid.RowDefinitions>

        				<TextBlock x:Name="tbDescription" Text="{Binding users, Converter={StaticResource ExpenseShareDescriptionConverter}}" Foreground="{Binding users, Converter={StaticResource ExpenseShareColorConverter}}" Grid.Row="0" FontSize="{StaticResource descriptionSize}" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding payment, Converter={StaticResource BoolVisibilityConverter}}"/>
        				<TextBlock Foreground="{Binding users, Converter={StaticResource ExpenseShareColorConverter}}" Text="{Binding Converter={StaticResource ExpenseShareAmountConverter}}" Grid.Row="1" FontSize="{StaticResource amountSize}" HorizontalAlignment="Right" Visibility="{Binding payment, Converter={StaticResource BoolVisibilityConverter}}"/>

        			</Grid>
        		</Grid>
        	</Border>
        </DataTemplate>


        <!--Colors-->
        <SolidColorBrush x:Key="splitwiseGreen">#5BC5A7</SolidColorBrush>
        <Color x:Key="green">#5BC5A7</Color>
        <SolidColorBrush x:Key="negative">#FC7F53</SolidColorBrush>
        <SolidColorBrush x:Key="positive">#5BC5A7</SolidColorBrush>
        <SolidColorBrush x:Key="settled">#ABABAB</SolidColorBrush>
        <SolidColorBrush x:Key="splitwiseGreyBG">#EEEEEE</SolidColorBrush>

        <SolidColorBrush x:Key="negativeLight">#FEECE5</SolidColorBrush>
        <SolidColorBrush x:Key="positiveLight">#E7FFF9</SolidColorBrush>

        <!--Text Sizes-->
        <sys:Double x:Key="nameSize">26</sys:Double>
        <sys:Double x:Key="expenseTitleSize">25</sys:Double>
        <sys:Double x:Key="amountSize">29</sys:Double>
        <sys:Double x:Key="descriptionSize">20</sys:Double>
        <sys:Double x:Key="groupTimeSize">18</sys:Double>

        <sys:Double x:Key="userDetailnameSize">29</sys:Double>
        <sys:Double x:Key="userDetaildescriptionSize">26</sys:Double>
        <sys:Double x:Key="expenseDetailAmount">22</sys:Double>

        <!--Page Animations-->
        <Style x:Key="TransitionPageStyle" TargetType="phone:PhoneApplicationPage">
            
        	<Setter Property="toolkit:TransitionService.NavigationOutTransition">
        		<Setter.Value>
        			<toolkit:NavigationOutTransition>
        				<toolkit:NavigationOutTransition.Backward>
        					<toolkit:TurnstileTransition Mode="BackwardOut"/>
        				</toolkit:NavigationOutTransition.Backward>
        			</toolkit:NavigationOutTransition>
        		</Setter.Value>
        	</Setter>
        </Style>
        
    	<Style TargetType="phone:Pivot">
    		<Setter Property="Margin" Value="0"/>
    		<Setter Property="Padding" Value="0"/>
    		<Setter Property="Foreground" Value="White"/>
    		<Setter Property="Background" Value="Transparent"/>
    		<Setter Property="ItemsPanel">
    			<Setter.Value>
    				<ItemsPanelTemplate>
    					<Grid/>
    				</ItemsPanelTemplate>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="phone:Pivot">
    					<Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
    						<Grid.RowDefinitions>
    							<RowDefinition Height="Auto"/>
    							<RowDefinition Height="Auto"/>
    							<RowDefinition Height="*"/>
    						</Grid.RowDefinitions>
    						<Grid Background="{StaticResource splitwiseGreen}" Grid.RowSpan="2"/>
                            <Grid Grid.Row="2" Background="White"/>
    						<ContentControl ContentTemplate="{TemplateBinding TitleTemplate}" Content="{TemplateBinding Title}" HorizontalAlignment="Left" Margin="24,17,0,-7" Style="{StaticResource PivotTitleStyle}"/>
    						<Primitives:PivotHeadersControl x:Name="HeadersListElement" Grid.Row="1"/>
    						<ItemsPresenter x:Name="PivotItemPresenter" Margin="{TemplateBinding Padding}" Grid.Row="2"/>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        
        <Style TargetType="phone:LongListSelector">
    		<Setter Property="Background" Value="Transparent"/>
    		<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="phone:LongListSelector">
    					<Grid Background="{TemplateBinding Background}" d:DesignWidth="480" d:DesignHeight="800">
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="ScrollStates">
    								<VisualStateGroup.Transitions>
    									<VisualTransition GeneratedDuration="00:00:00.5"/>
    								</VisualStateGroup.Transitions>
    								<VisualState x:Name="Scrolling">
    									<Storyboard>
    										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalScrollBar"/>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="NotScrolling"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Grid Margin="{TemplateBinding Padding}">
    							<Grid.ColumnDefinitions>
    								<ColumnDefinition Width="*"/>
    								<ColumnDefinition Width="auto"/>
    							</Grid.ColumnDefinitions>
    							<ViewportControl x:Name="ViewportControl" HorizontalContentAlignment="Stretch" VerticalAlignment="Top"/>
    							<ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" Margin="4,0,4,0" Opacity="0" Orientation="Vertical" Background="Gray"/>
    						</Grid>
    					</Grid>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>

        <Style TargetType="toolkit:ExpanderView">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="toolkit:ExpanderView">
                        <Grid>
                            <Grid.Resources>
                                <QuadraticEase x:Key="QuadraticEaseOut" EasingMode="EaseOut"/>
                                <QuadraticEase x:Key="QuadraticEaseInOut" EasingMode="EaseInOut"/>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="41"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ExpansionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Collapsed" GeneratedDuration="0:0:0.15" To="Expanded">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas">
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseOut}" KeyTime="0:0:0.00" Value="0"/>
                                                    <EasingDoubleKeyFrame x:Name="CollapsedToExpandedKeyFrame" EasingFunction="{StaticResource QuadraticEaseOut}" KeyTime="0:0:0.15" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Expanded" GeneratedDuration="0:0:0.15" To="Collapsed">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas">
                                                    <EasingDoubleKeyFrame x:Name="ExpandedToCollapsedKeyFrame" EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.00" Value="1"/>
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.15" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas">
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.00" Value="1.0"/>
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.15" Value="0.0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="ItemsCanvas">
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.00" Value="0.0"/>
                                                    <EasingDoubleKeyFrame EasingFunction="{StaticResource QuadraticEaseInOut}" KeyTime="0:0:0.15" Value="-35"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Collapsed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas"/>
                                            <DoubleAnimation Duration="0" To="0.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Expanded">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="ItemsCanvas"/>
                                            <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsCanvas"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ExpandabilityStates">
                                    <VisualState x:Name="Expandable"/>
                                    <VisualState x:Name="NonExpandable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandableContent">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Line">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="NonExpandableContent">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ListBoxItem x:Name="ExpandableContent" Grid.ColumnSpan="2" Grid.Column="0" toolkit:TiltEffect.IsTiltEnabled="True" Grid.Row="0" Grid.RowSpan="2">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="41"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <ContentControl x:Name="Header" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Row="0"/>
                                    <ContentControl x:Name="Expander" ContentTemplate="{TemplateBinding ExpanderTemplate}" Content="{TemplateBinding Expander}" Grid.Column="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Margin="11,0,0,0" Grid.Row="1"/>
                                    <Grid x:Name="ExpanderPanel" Background="Transparent" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"/>
                                </Grid>
                            </ListBoxItem>
                            <ContentControl x:Name="NonExpandableContent" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding NonExpandableHeaderTemplate}" Content="{TemplateBinding NonExpandableHeader}" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Row="0" Grid.RowSpan="2" Visibility="Collapsed"/>
                            <Canvas x:Name="ItemsCanvas" Grid.Column="1" Margin="11,0,0,0" Opacity="0.0" Grid.Row="2">
                                <Canvas.RenderTransform>
                                    <CompositeTransform TranslateY="0.0"/>
                                </Canvas.RenderTransform>
                                <ItemsPresenter x:Name="Presenter"/>
                            </Canvas>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>

    <Application.ApplicationLifetimeObjects>
        <!--Required object that handles lifetime events for the application-->
        <shell:PhoneApplicationService
            Launching="Application_Launching" Closing="Application_Closing"
            Activated="Application_Activated" Deactivated="Application_Deactivated"/>
    </Application.ApplicationLifetimeObjects>

</Application>