<Page
    x:Class="Split_It.FriendDetailPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Split_It"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:pr="using:PullToRefresh.UWP"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:con_bal="using:Split_It.Converter.Balance"
    xmlns:winux="using:WinUX.Xaml.Converters"
    xmlns:utils="using:Split_It.Utils"
    xmlns:con_settle="using:Split_It.Converter.SettleUp"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d">

    <Page.DataContext>
        <Binding Path="FriendDetailVM" Source="{StaticResource Locator}"/>
    </Page.DataContext>

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/ExpenseSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <winux:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter"/>
            <winux:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <con_bal:TextConverter x:Key="BalanceTextConverter"/>
            <con_bal:AmountConverter x:Key="BalanceAmountConverter"/>
            <con_bal:VisibilityConverter x:Key="BalanceVisibilityConverter"/>

            <con_settle:AmountToInfoConverter x:Key="AmountToInfoConverter"/>
            <con_settle:PositiveAmountConverter x:Key="PositiveAmountConverter"/>
        </ResourceDictionary>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <RelativePanel Background="{StaticResource splitwiseGreen}" DataContext="{Binding CurrentFriend}">
            <Button FontFamily="Segoe MDL2 Assets" 
                    x:Name="BackButton"
					Foreground="White"
					Content="&#xE72B;"
					Width="50" Height="50" 
					Background="Transparent" Style="{StaticResource NoBorderSelectButton}" 
                    Command="{Binding FriendDetailVM.GoBackCommand, Mode=OneWay}" DataContext="{Binding Source={StaticResource Locator}}"/>
            <Ellipse Style="{StaticResource RoundImage}" x:Name="image" RelativePanel.RightOf="BackButton" RelativePanel.AlignVerticalCenterWith="BackButton">
                <Ellipse.Fill>
                    <ImageBrush ImageSource="{Binding Picture.Medium}"/>
                </Ellipse.Fill>
            </Ellipse>
            <Grid RelativePanel.RightOf="image" RelativePanel.AlignVerticalCenterWith="image" Margin="15,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding Name}" Foreground="White" />
                <TextBlock Text="{Binding Email}" Foreground="White" 
                           Visibility="{Binding Email, Converter={StaticResource EmptyStringToVisibilityConverter}}" Grid.Row="1"/>
            </Grid>
            <ListView RelativePanel.Below="image" ItemsSource="{Binding Balance}" 
                      Margin="0,10" SelectionMode="None"
                      RelativePanel.RightOf="BackButton">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Converter={StaticResource BalanceTextConverter}}" FontSize="13" Foreground="White"/>
                            <TextBlock Grid.Column="1" Visibility="{Binding Converter={StaticResource BalanceVisibilityConverter}}" 
                                       Foreground="White" FontSize="13">
                                <Run/>
                                <Run Text="{Binding Converter={StaticResource BalanceAmountConverter}}" FontWeight="Bold"/>
                            </TextBlock>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </RelativePanel>

        <pr:PullToRefreshBox Grid.Row="1">
            <pr:PullToRefreshBox.TopIndicatorTemplate>
                <DataTemplate>
                    <pr:PullRefreshProgressControl PullToRefreshText="Pull to Refresh" ReleaseToRefreshText="Release To Refresh"/>
                </DataTemplate>
            </pr:PullToRefreshBox.TopIndicatorTemplate>

            <ListView ItemsSource="{Binding ExpensesList}" ItemTemplate="{StaticResource ExpenseTemplate}" 
                      FooterTemplate="{StaticResource FooterTemplate}" SelectedItem="{Binding SelectedExpense, Mode=TwoWay}"/>
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="RefreshInvoked">
                    <Core:InvokeCommandAction Command="{Binding RefreshExpensesCommand, Mode=OneWay}"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </pr:PullToRefreshBox>

        <Canvas Background="DarkGray" Opacity="0.5" 
				Grid.Row="1" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <ProgressRing IsActive="{Binding IsBusy}" Grid.Row="1"/>
    </Grid>

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton Label="new expense" Icon="Add"/>
            <AppBarButton Label="settle up" Icon="Accept" x:Name="settleAppBar" IsEnabled="{Binding CanSettleUp}">
                <AppBarButton.Flyout>
                    <Flyout utils:FlyoutHelpers.IsOpen="{Binding IsFlyoutOpen, Mode=TwoWay}"
                            utils:FlyoutHelpers.Parent="{Binding ElementName=settleAppBar}">
                        <ListView ItemsSource="{Binding CurrentFriend.Balance}" SelectedItem="{Binding SettleUpBalance, Mode=TwoWay}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Run Text="{Binding Amount, Converter={StaticResource AmountToInfoConverter}}"/>
                                        <Run Text="{Binding CurrencyCode}" FontWeight="SemiBold"/><Run Text="{Binding Amount, Converter={StaticResource PositiveAmountConverter}}" FontWeight="SemiBold"/>
                                    </TextBlock>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
        </CommandBar>
    </Page.BottomAppBar>
</Page>
